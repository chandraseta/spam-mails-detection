firewalls digest v firewalls digest thu jul volume issue issue qos fw disable sit dnat iptables question dnat iptables question george j jahchan subject qos date thu jul force conclude packetshaper either suck major way explanation the explanation give wrong sorry wrong count explanation valid symmetrical tcp others see explanations yes packets establish tcp connection ack flag set packets except syns candidates delay traffic limit exceed whoop change always candidates predictive preventive delay acks delay per flow way wan bound traffic reach edge router ethernet interface exceed wan link speed router queue wait link near saturation act unlike queue predictive reactive slow rate transmission send host per flow basis accommodate wan link speed limit current network utilization rather fill queue lan speed empty wan speed eventually drop excess queue fill inform host slow rate transmission queue beyond fix threshold rate control work equally well outbound inbound traffic ever hear effective queue technology inbound traffic queue packets cross congest link make much sense ipsec gre encapsulate traffic obviously dissect ipsec gre encapsulate traffic see tunnel one connection tunnel device ps lan side vpn gateway router two separate devices ps router tunnel ps see clear traffic typically organization first scenario would case headquarter second branch offices ps branch see traffic inside tunnel whereas unit hq see traffic one tunnel allow full management tunnel clear traffic end udp asymmetrical tcp ps router see outgo packet return traffic come back satellite downlink station lan handle differently asymmetrical tcp time release packets receive device thereby indirectly time release acknowledgements receive host inform sender tcp ip stack slow release packets limit bandwidth available udp utilize flow based derivative random drop selectively drop one packet time flow predict congestion prevent heavy retransmissions application timeouts icmp packets exceed policy limit drop _maybe_ special case tcp try offload queue endpoints really see real gain real gain manageability control lan host know state connections oblivious wan condition tcp ip stack learn router queue nearly full wan congest ps predict inform lan host tcp ip stack speed limit obey every connection base policies network condition avoid congestion control asymmetrical tcp udp may tight symmetrical tcp work queue akin deploy cop traffic jam occur vs rate control cop permanently deploy throughout town communicate central control point predict upcoming congestion regulate traffic ensure smooth flow traffic potential congestion take driver hell lot longer cross town first approach second agree original message mikael olsson george j jahchan cc firewalls list send wednesday july pm subject qos george j jahchan write whole purpose device pro actively prevent wan congestion sit client server client inside server outside client outside server inside make difference pro actively adjust tcp window size delay acknowledgement get send host honor speed limit individual connection calculate real time base user defined policies current network condition umm get wrong think feed less than accurate sales pitch let us ponder minute device work delay acks packets ack flag set right let sink yes packets establish tcp connection ack flag set packets except syns candidates delay traffic limit exceed whoop okay let us assume second packets actually delay ack sequence number tcp window size field re written dicey accomplish move queue delay traffic shaper endpoints still get l to l delay big deal happen wire stack also convince endpoints delay probably result less than perfect shape since stack retransmit time suddenly affect actual bandwidth available rather shaper shaper know exactly bandwidth available even begin touch protocols like udp icmp matter ipsec gre whatever tunnel traffic neither sequence number window size manipulate force conclude packetshaper either suck major way explanation the explanation give wrong sorry think happen delay msec long traffic limit exceed reasonable traffic exceed limit things begin queue well behaved tcp stack _will_ mean fall back lower transmission rat tcp design part wrong kind shape rocket science say shapers plain dumb always queue select get transmit queue well see get smarter queue limit actually exceed _maybe_ special case tcp try offload queue endpoints really see real gain respectfully mikael olsson mikael olsson clavister ab storgatan box se ornskoldsvik sweden phone mobile fax www http www clavister com july vacation tell firewalls mail list firewalls isc org unsubscribe http hiemstra brenno subject fw disable sit date thu jul list addy change ofcourse original message hiemstra brenno send donderdag juli michael zhao hiemstra brenno cc firewalls lists gnac net subject disable sit michael shoe would first investigate security policy organisation know mean security policy would advice start read search google would big help security policy would read investigate tell employees able use workstations perform function security policy things employees allow network internet security policy would advice implement one company without one punish employees violate policy court case rock solid thing smack around without policy implement solutions prevent employees things im opinion allow workstations anyway like idea employees play game use kazaa icq msn etc etc stead work pay security policy important say employees violate consequences deny internet access etc etc owkee way time proceed proxy thingie proxy default gateway network use function internet explorer whatever browser use network ask checkpoint firewalls good use real purpose firewalling network like idea firewall also cvs http thingie think firewall purpose proxies much better solutions also develop purpose depend network setup os proxy brand current proxy several solutions already provide people list favorite proxy squid probably lot http blacklist program work squid block websites stuff still think first deny direct internet traffic workstations allow traffic internet servers allow think proxies email servers etc etc also prevent people play game especially quake kinda game use port necessary normal webbrowsing game run port http relate block proxy proxy true layer application layer proxy kinda proxies view tcp ip packet see legitimate http traffic someone try tunnel something port anyway food thoughts regard brenno original message michael zhao smtp mzhao send woensdag juli hiemstra brenno cc firewalls lists gnac net subject disable sit thank reply build network three years ago proxy use cache accelerate internet access gateway difficult change topology many thing need change another idea help someone suggest buy websence budget right thank lot michael hiemstra brenno write michael first thing build security policy state people allow everyone need accept policy violate apply rule state security policy option network setup would install proxy server demand every client connect proxy want use internet proxy allow http ftp approve service connect internet let check database websites allow deny access sit allow company firewall allow proxy connect internet clients deny way clients connect directly internet game servers proxy deny clients connect game servers hope option regard brenno original message michael zhao smtp mzhao send dinsdag juli firewalls lists gnac net subject disable sit hi choose checkpoint fw firewall find many company users play internet game like cs ourgame find users download clients software install local workstation run programe connect game server automatically usally many sit every internet game server i e want disable access game servers like xxx ourgame com internal net except find ip address complecat tell regard michael firewalls mail list firewalls isc org unsubscribe http date thu jul jerry lynde subject dnat iptables question folks scour online docs solid info accomplish dnat iptables essentially convert ipmasqadm line form ipmasqadm portfw p tcp l web_out http r web_in http iptables line form iptables prerouting nat p tcp web_out dport j dnat web_in accompany line iptables forward intif extif state state establish relate j accept iptables forward extif intif state state establish relate j accept iptables forward extif intif p tcp j accept last two line seem functionally sorta redundant throw em effort make work far unable show work correctly even try log packets iptables forward intif p tcp j log log level info iptables forward extif p tcp j log log level info nothing show var log messages anywhere else matter redhat box help clue flame rt particular fm etc appreciate read list please reply directly addition list resposne thank jer reckhard tobias subject dnat iptables question date fri jul iptables prerouting nat p tcp web_out dport j dnat web_in accompany line iptables forward intif extif state state establish relate j accept iptables forward extif intif state state establish relate j accept iptables forward extif intif p tcp j accept last two line seem functionally sorta redundant throw em effort make work miss new state initial syn packet match either first two rule match third inbound though far unable show work correctly even try log packets iptables forward intif p tcp j log log level info iptables forward extif p tcp j log log level info nothing show var log messages anywhere else matter need insert log rule accept reject deny rule use sure packets hit box try move log rule top forward chain introduce log rule prerouting postrouting input output chain and or use tcpdump well see packets travel cheer tobias end firewalls digest v