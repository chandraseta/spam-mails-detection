unison announce new unison beta release available yahoo group sponsor dvds free p join http new version unison available test incorporate several small improvements main change fix bug potentially serious safety consequences small number users habit run one instance unison time parallel users strongly encourage upgrade others wait wish release include pre built executables linux solaris windows look unison windows maintainer moment none active developers regularly use unison windows machine configure properly build executables export grab http enjoy benjamin change since add preference maxthreads use limit number simultaneous file transfer add backupdir preference control backup file store basic support add osx particular unison recognize one host synchronize run osx switch case insensitive treatment filenames i e foo foo consider file osx yet fully work however particular file resource fork synchronize correctly hash use form archive name also add name temp file create file transfer reason update detection go silently delete old temp file find along way want prevent delete temp file belong instance unison may run parallel e g synchronize different host thank ruslan ermilov suggestion several small user interface improvements documentation faq bug report instructions split separate html page accessible directly unison web page additions faq particular suggestions performance tune makefile makefile ocaml set uistyle text uistyle gtk automatically depend whether find lablgtk instal unison compile box osx change since change profile work windows file movement optimization unison try use local copy instead transfer move copy file control boolean option xferbycopying network statistics window transfer rate amount data transfer nb available windows cygwin version symlinks work cygwin version dynamically link fix potential deadlock synchronize windows unix small improvements neither tt userprofile tt home environment variables set unison put temporary commit log call tt danger readme directory name tt unison environment variable otherwise use tt c alternative set value fastcheck yes true false default auto silent imply contactquietly source code code reorganization tidy start break basic utility modules non unison specific stuff make available project several makefile docs change release comment update ml connection information store global variables anymore change since small bugfix textual user interface unix avoid leave terminal bad state would echo input unison exit change since improvements main web page stable beta version docs accessible user manual revise add new preferences sshcmd rshcmd specify paths ssh rsh program contactquietly suppress contact server message unison startup graphical ui bug fix fix small bug ui neglect change display column headers load new profile cause root change fix bug would put text ui infinite loop encounter conflict run batch mode add code try fix display non ascii character filenames windows systems gtk ui code currently untested one people report problems display non ascii filenames would appreciate know actually fix things prefer  force newer work properly bug report sebastian urbaniak sean fulton user interface unison behavior rename proceed go graphical ui add exit status textual user interface paths synchronize conflict errors update detection note log file end message log use briefer format change text ui startup sequence tt unison ui text use default profile instead fail make improvements error message add debug message remote ml change since incorporate multi threaded transport sub system transfer several file time thereby make much effective use available network bandwidth unlike earlier attempt time rely native thread library ocaml instead implement light weight non preemptive multi thread library ocaml directly version appear stable adjustments unison make accommodate multi threaded version include particular change user interface log example two log entries transfer task one begin one end suppress warn message remove temp file leave previous unison run warn work nicely multi threading temp file name make less likely coincide name file create user take form unison tmp add new command gtk user interface press f cause unison start new update detection phase use paths paths detect change yet mark successfully complete use command quickly restart unison set paths still need attention previous run make ignorecase preference user visible change initialization code manually set true even neither host run windows may useful e g use unison run unix system fat volume mount small improvements bug fix errors preference file generate fatal errors rather warn startup time i e go also fix bug prevent warn appear text ui users run unsuspectingly garbage prefs file may get error report error report preference file provide file name line number intelligible message case identical change file nothing replicas change identical ways since last sync file prefix exclude scan preference file rsync instructions send directly instead first marshal try forever get fingerprint continuously change file unison give certain number retry bug fix include one report peter selinger force older preference work compilation upgrade new ocaml compiler lablgtk library patch version use compile windows add option compile unison windows platform cygwin gnu c compiler option support build dynamically link unison executables change since fix silly debilitate bug client startup sequence change since add addprefsto preference set control preference file new preferences e g new ignore pattern add bug fix read initial connection header one byte time block header shorter expect bug affect normal operation make hard tell try use unison incorrectly old version server since would hang instead give error message change since change fastcheck boolean string preference legal value yes fast check safe check default fast check also happen safe run unix safe check windows default default several preferences rename consistency preference name spell lowercase backward compatibility old name still work mention manual temp file create wouldiff merge command name prepending new prefix file name rather append suffix avoid confuse diff merge program depend suffix guess type file content set keepalive option server socket make sure server time communication link unexpectedly break bug fix update small file unison close destination file file permissions properly update file behind follow link several small fix change since major windows performance improvement add preference fastcheck make unison look file creation time last modified time check whether change result huge speedup check update large replicas switch set unison use file creation time pseudo inode number scan windows replicas update instead read full content every file may unison miss propagate update create time modification time length file unchanged update easy achieve do however unison never overwrite update change replica since always safe check update propagate change thus reasonable use switch time occasionally run unison fastcheck set false worry unison may overlook update warn change yet thoroughly field tested set fastcheck preference pay careful attention unison new functionality centralize backups merge version incorporate two piece major new functionality implement sylvain roy summer internship penn centralize backup facility keep full backup select file replica merge feature allow unison invoke external file merging tool resolve conflict change individual file centralize backups unison maintain full backups last synchronized versions file replica function backups usual sense common version invoke external merge program back file store directory unison backup host name directory change set environment variable unisonbackupdir predicate backup control file actually back give preference backup path cause back file file add backup directory whenever unison update archive mean unison reconstruct archive scratch e g upgrade archive file manually delete file back otherwise file back first time unison propagate update preference backupversions control many previous versions file keep default i e last synchronize version plus one backup backward compatibility backups preference also still support backup prefer ok manually delete file backup directory throw away directory unison use file anything important check fingerprint match one expect merge user interfaces offer new merge command invoke press change file select actual merge perform external program preferences merge merge control program invoke backup exist file see backup preference merge preference use purpose otherwise merge use case value preference string represent command pass invoke merge program within string special substrings current current new old may appear point unison substitute follow invoke command current replace name local copy file current replace name temporary file content remote copy file transfer unison prior perform merge new replace name temporary file unison expect write merge program finish give desire new content file old replace name back copy original version file i e state end last successful run unison one exist apply merge merge example unix systems set merge preference merge diff current old current new tell unison use external diff program merge large number external merge program available example emacs users may find follow convenient merge emacs q eval ediff merge files current current nil new merge emacs q eval current current old nil new command display two line avoid run edge page preference file write single line external program exit without leave file path new unison consider merge fail merge program write file call new exit non zero status code unison consider merge succeed generate conflict case attempt invoke external editor user resolve conflict value editor preference control editor invoke unison default emacs please send us suggestions useful value merge merge preferences would like give several examples manual smaller change one preference file include another unison longer add suffix prf include file default file precisely give name exist unison directory use otherwise unison add prf change mean include preference file name blah include instead blah prf unison offer choose preference file dialog linux systems offer statically link dynamically link executable static one larger probably run systems since depend versions dynamically link library modules available fix force prefer preferences get propagation direction exactly backwards fix bug startup code would unison crash default profile exist fix bug run profile first create unison would confusingly display root reverse order user interface developers add module dependency diagram source distribution src dependencies ps help new prospective developers navigate code change since incompatible change archive format change incompatible change startup sequence completely rewrite greatly simplify main user visible change defaultpath preference remove effect approximate use multiple profile include directives incorporate common settings use defaultpath exist profile change path another change startup behavior affect users longer possible specify root profile command line achieve similar effect though break profile two default prf root blah root foo include common common prf unison common root root want specify root explicitly prefer force options extend allow users specify file recent modtimes propagate write either prefer newer force newer symmetry unison also accept prefer older force older force older newer options use time also set graphical user interface provide access facilities one off basis via action menu name root aliased allow replicas relocate without change name archive file unison store information run feature experts see archive file section manual information graphical user interface new command provide synchronization menu switch new profile without restart unison scratch gui also support one key shortcuts commonly use profile profile contain preference form key n n single digit press key unison immediately switch profile begin synchronization scratch action may select set change currently display discard profile may include preference label give descriptive string describe options select profile string list along profile name profile selection dialog display top right corner main unison window minor fix bug would sometimes wouldiff display order file backwards relative main user interface thank pascal brisset fix unix systems graphical version unison check display variable set automatically fall back textual user interface synchronization paths path preferences match ignore preferences path specify path preference ignore skip numerous bugfixes small improvements change since synchronization modification time disable directories preference file may include line form include name prf read point synchronization permission windows unix work properly bind cygwin binmode add environment cygwin port openssh work properly non cygwin context servercmd addversionno preferences use together addversionno append appropriate nnn server command find use value servercmd preference one else unison pref val pref val allow boolean value former use set preference false lot small bug fix change since log preference set true default since log file seem useful users several miscellaneous bugfixes involve symlinks change since incompatible change archive format change several significant bug introduce fix change since incompatible change archive format change make sure synchronize replicas upgrade avoid spurious conflict first sync upgrade slow new functionality unison synchronize file modtimes user ids group ids new feature control set new preferences currently false default time preference set true file modification time propaged representations time may granularity replicas unison may always able make modtimes precisely equal get close operate systems involve allow owner preference set true file ownership information synchronize group preference set true group information synchronize numericids preference set true owner group information synchronize numerically default owner group number convert name replica name synchronize special user id special group never map via user group name even preference set add integer valued preference perm use control propagation permission bits value preference mask indicate permission bits synchronize set default bits set uid set gid bits synchronise synchronize theses latter bits security hazard want synchronize bits set value preference add log preference default false make unison keep complete record change make replicas default record write file call unison log user home directory value home environment variable want someplace else set logfile preference full pathname want unison use add ignorenot preference maintain set pattern paths definitely ignore whether match ignore pattern path ignore iff match ignore pattern match ignorenot pattern user interface improvements root display user interface order give command line preferences file batch preference set graphical user interface longer wait user confirmation display warn message simply pop advisory window dismiss button bottom keep go add new preference control many status message print update detection statusdepth control maximum depth paths local machine longer paths display non directory paths value integer default remove trace silent preferences seem useful many preferences control output various ways text ui display default command one use user type instead available command type print full list possibilities function find canonical hostname local host use example calculate name archive file use remember file synchronize normally use gethostname operate system call however environment variable unisonlocalhostname set value use instead make easier use unison situations machine name change frequently e g laptop get move around lot file owner group display detail window bottom screen unison configure synchronize hackers update jacques garrigue new version lablgtk mean throw away local patch version compile gtk version unison source need update copy lablgtk developers release available http warn instal lablgtk windows currently bite challenge todo txt file source distribution clean reorganize list pending task much easier make sense people may want contribute program energies also separate file bugs txt open bug tk user interface remove maintain longer compile debug preference print quite bite additional information useful identify source problems version number remote server check right away connection setup handshake rather later somebody send bug report server crash turn come use inconsistent versions better check earlier way crash either client server unison run correctly bit architectures e g alpha linux distribute binaries architectures least someone would like make available glad provide link bug fix pattern match e g ignore case insensitive unison case insensitive mode i e one replicas windows machine people trouble mysterious failures propagation update file would falsely report change synchronization fix numerous smaller fix change since add number sort modes user interface default conflict change display top rest entries sort alphabetical order behavior change follow ways set sortnewfirst preference true cause newly create file display change file set sortbysize cause file display increase order size give preference sortfirst path descriptor format ignore follow pattern cause paths match pattern display first similarly give preference sortlast cause paths match pattern display last sort preferences describe detail user manual sortnewfirst sortbysize flag also access sort menu grpahical user interface add two new preferences use change unison fundamental behavior make like mirror tool instead synchronizer give preference prefer argument add prefer command line prefer profile mean conflict content propagate replica question ask non conflicting change treat usual give preference force argument make unison resolve differences favor give root even replica change options use care information available manual small change change default answer yes two button dialogs graphical interface seem intuitive rsync preference remove use activate rsync compression file transfer rsync compression enable default text user interface arrows indicate direction change propagate print differently user overridded unison default recommendation instead match behavior graphical interface display arrows different color carriage return control m ignore end line profile windows compatibility preferences fully document user manual change since incompatible change archive format change make sure synchronize replicas upgrade avoid spurious conflict first sync upgrade slow new improved functionality new preference sortbysize control order change display user set true smallest change file display first default set false new preference sortnewfirst cause newly create file list update user interface allow ssh protocol specify port incompatible change unison protocol deprecate add file socket may modify profile unison directory replica specify without explicit protocol assume refer file previously saul foo mean use ssh connect saul access foo directory mean access saul via remote file mechanism samba old effect achieve write ssh saul foo change startup sequence case root give profile give command line new behavior use default profile create exist temporarily override root manual claim case would work read profile afaik never true user interfaces file conflict always list first new preference sshversion use control version ssh use connect server legal value default empty make unison use whatever version ssh instal default ssh command situation permissions file update side handle correctly use report spurious conflict improvements windows version fact filenames treat case insensitively windows handle correctly exact behavior describe cross platform section manual possible synchronize windows share e g host drive path workarounds bug sync root directories windows difficult thing fix ocaml bug unix opendir fail c versions windows improvements gtk user interface tk interface longer maintain ui display action differently blue explicitly change user unison default recommendation colorful appearance initial profile selection window work better transfer fail message effect display along synchronization complete end transfer phase case may scroll top add global progress meter display percentage total bytes transfer far improvements text user interface file detail display automatically conflict detect warn generate e g temporary file leave previous run unison unison longer wait response run batch mode ui display short list possible input time wait user interaction ui quit immediately rather loop back start interaction user press q ask whether propagate change press g text user interface proceed immediately propagate update without ask question documentation installation change manual include faq plus section common problems trick contribute users download page download directory explicitly say current stable beta test version number ocaml source up to the minute developers version guarantee stable even compile give time available download page add subsection manual describe cross platform issue case conflict illegal filenames many small bug fix random improvements change since several bug fix important bug rsync module would occasionally change propagation fail arename error change since multi threaded transport system disable default stable enough yet various bug fix new experimental feature final component path argument may wildcard specifier unison see path expand path client correspond list paths list content directory note use wildcard paths command line probably need use quote backslash prevent interpret root local content first one use expand wildcard paths nb first one canonization step i e one list first user interface one list first command line preferences file change since transport subsystem include implementation sylvain gommier norman ramsey tridgell mackerras rsync protocol protocol achieve much faster transfer small part large file change send diffs feature mainly helpful transfer slow link fast local area network actually degrade performance leave default start unison rsync option put rsync true preferences file turn progress bar diplayed remote file transfer show percentage file transfer far version number scheme change new release number like second component incremented every significant public release third component patch level miscellaneous improvements gtk based user interface manual available pdf format experiment use multi threaded transport subsystem transfer several file time make much effective use available network bandwidth feature completely stable yet default disable release version unison want play multi threaded version need recompile unison source describe documentation set thread flag makefile ocaml true make sure ocaml compiler instal with pthreads configuration option verify check whether file threads threads cma ocaml standard library directory contain string lpthread near end change since reduce memory footprint especially important first run unison gather information file repositories fix bug would socket server nt fail client exit add shift modifier ignore menu shortcut key gtk interface avoid hit accidentally change since tunnel ssh support windows version see installation section manual detail instructions transport subsystem include implementation rsync protocol build sylvain gommier norman ramsey protocol achieve much faster transfer small part large file change send diffs rsync feature default current version use rsync switch turn nb still lot tune may notice much speedup yet experiment multi threaded transport subsystem write jerome vouillon downloadable binaries still single threaded want try multi threaded version need recompile source say make threads true native thread support compiler require use option thread n select maximal number concurrent thread default multi threaded single threaded clients servers interoperate new gtk based user interface available thank jacques garrigue tk user interface still work shift development effort gtk interface ocaml require compile unison source modules uitk myfileselect change use labltk instead camltk compile tk interface windows must ocaml tk instal tk put c tcl rather suggest c program files tcl sure install headers libraries instal default add new addversionno switch cause unison use unison instead unison remote server command allow multiple versions unison coexist conveniently server whichever version run client version select server change since incompatible change archive format change make sure synchronize replicas upgrade avoid spurious conflict first sync upgrade slow version fix several annoy bug include case propagation file permissions work umask ignore create directories directories create writable read only directory content propagate handle warn generate server synchronize path whose parent directory side flag erroneous fix bug relate symnbolic link nonexistant root change deletion new content propagate onto follow ed symlink file point link change use change link fit assertion follow mean link completely invisible one root exist propagate root top use fail becuase unison could calculate work directory write change fix human readable timestamp add unison archive file semantics path name regular expressions correspond better minor improvements text ui e g command go back previous items organization export directory change easier find download things change since incompatible change archive format change make sure synchronize replicas upgrade avoid spurious conflict first sync upgrade slow version test extensively windows major internal change design make unison safer run time replicas change user internal performance improvements change since incompatible change archive format change make sure synchronize replicas upgrade avoid spurious conflict first sync upgrade slow number internal function change reduce amount memory allocation especially first synchronization help power users big replicas reimplementation low level remote procedure call stuff preparation add rsync like smart file transfer later release miscellaneous bug fix change since incompatible change archive format change make sure synchronize replicas upgrade avoid spurious conflict first sync upgrade slow fix small bug interpretation ignore pattern fix problems prevent windows version work correctly click started fix treatment file permissions windows cause spurious report different permissions synchronize windows unix systems fix one non tail recursive list process function cause stack overflow synchronize large replicas change since text user interface provide command ignore file find fix non tail recursive list process function power users report success large replicas incompatible change file end tmp longer ignore automatically want ignore file put appropriate ignore pattern profile incompatible change syntax ignore follow pattern change instead put line form ignore profile unison default prf put ignore regexp moreover two style pattern also recognize ignore name match path one component match ignore path match exactly path standard globbing conventions use match single character except match sequence character include xyz match character set x z bb ccc match one bb ccc see user manual examples change since users report stack overflow synchronize huge directories find fix non tail recursive list process function hope solve problem please give try let us know major additions documentation change since major internal tidy many small bugfixes major additions user manual unison start arguments prompt automatically name profile file contain root synchronize make possible start graphical ui desktop icon fix small bug text ui nt raise signal exception change since precompiled windows binary last release compile old ocaml compiler cause propagation permissions work perhaps lead strange behaviors hear report correct use precompiled binaries windows please upgrade add debug command line flag control debug various modules say debug xxx enable debug trace module xxx debug turn absolutely everything fix small bug text ui nt raise signal exception change since incompatible change name format preference file unison directory change particular file prefs rename default prf content file ignore merge default prf line form regexp ignore become line form ignore regexp default prf unison handle permission bits symbolic link see manual detail different preference file unison directory start unison like unison profilename i e one anonymous command line argument file load instead default prf improvements terminal handle text user interface add switch killserver terminate remote server process unison client shut even use sockets communication default remote server create use ssh rsh terminate automatically socket server leave run start socket server mode unison print server start stderr ready accept connections may useful script want tell socket mode server finish initalization make nightly mirror current internal development tree case anyone want up to the minute version hack around add file contrib suggestions help us make unison better change version change since add preference maxthreads use limit number simultaneous file transfer add backupdir preference control backup file store basic support add osx particular unison recognize one host synchronize run osx switch case insensitive treatment filenames i e foo foo consider file osx yet fully work however particular file resource fork synchronize correctly hash use form archive name also add name temp file create file transfer reason update detection go silently delete old temp file find along way want prevent delete temp file belong instance unison may run parallel e g synchronize different host thank ruslan ermilov suggestion several small user interface improvements documentation faq bug report instructions split separate html page accessible directly unison web page additions faq particular suggestions performance tune makefile makefile ocaml set uistyle text uistyle gtk automatically depend whether find lablgtk instal unison compile box osx change since change profile work windows file movement optimization unison try use local copy instead transfer move copy file control boolean option xferbycopying network statistics window transfer rate amount data transfer nb available windows cygwin version symlinks work cygwin version dynamically link fix potential deadlock synchronize windows unix small improvements neither tt userprofile tt home environment variables set unison put temporary commit log call tt danger readme directory name tt unison environment variable otherwise use tt c alternative set value fastcheck yes true false default auto silent imply contactquietly source code code reorganization tidy start break basic utility modules non unison specific stuff make available project several makefile docs change release comment update ml connection information store global variables anymore change since small bugfix textual user interface unix avoid leave terminal bad state would echo input unison exit change since improvements main web page stable beta version docs accessible user manual revise add new preferences sshcmd rshcmd specify paths ssh rsh program contactquietly suppress contact server message unison startup graphical ui bug fix fix small bug ui neglect change display column headers load new profile cause root change fix bug would put text ui infinite loop encounter conflict run batch mode add code try fix display non ascii character filenames windows systems gtk ui code currently untested one people report problems display non ascii filenames would appreciate know actually fix things prefer  force newer work properly bug report sebastian urbaniak sean fulton user interface unison behavior rename proceed go graphical ui add exit status textual user interface paths synchronize conflict errors update detection note log file end message log use briefer format change text ui startup sequence tt unison ui text use default profile instead fail make improvements error message add debug message remote ml change since incorporate multi threaded transport sub system transfer several file time thereby make much effective use available network bandwidth unlike earlier attempt time rely native thread library ocaml instead implement light weight non preemptive multi thread library ocaml directly version appear stable adjustments unison make accommodate multi threaded version include particular change user interface log example two log entries transfer task one begin one end suppress warn message remove temp file leave previous unison run warn work nicely multi threading temp file name make less likely coincide name file create user take form unison tmp add new command gtk user interface press f cause unison start new update detection phase use paths paths detect change yet mark successfully complete use command quickly restart unison set paths still need attention previous run make ignorecase preference user visible change initialization code manually set true even neither host run windows may useful e g use unison run unix system fat volume mount small improvements bug fix errors preference file generate fatal errors rather warn startup time i e go also fix bug prevent warn appear text ui users run unsuspectingly garbage prefs file may get error report error report preference file provide file name line number intelligible message case identical change file nothing replicas change identical ways since last sync file prefix exclude scan preference file rsync instructions send directly instead first marshal try forever get fingerprint continuously change file unison give certain number retry bug fix include one report peter selinger force older preference work compilation upgrade new ocaml compiler lablgtk library patch version use compile windows add option compile unison windows platform cygwin gnu c compiler option support build dynamically link unison executables change since fix silly debilitate bug client startup sequence change since add addprefsto preference set control preference file new preferences e g new ignore pattern add bug fix read initial connection header one byte time block header shorter expect bug affect normal operation make hard tell try use unison incorrectly old version server since would hang instead give error message change since change fastcheck boolean string preference legal value yes fast check safe check default fast check also happen safe run unix safe check windows default default several preferences rename consistency preference name spell lowercase backward compatibility old name still work mention manual temp file create wouldiff merge command name prepending new prefix file name rather append suffix avoid confuse diff merge program depend suffix guess type file content set keepalive option server socket make sure server time communication link unexpectedly break bug fix update small file unison close destination file file permissions properly update file behind follow link several small fix change since major windows performance improvement add preference fastcheck make unison look file creation time last modified time check whether change result huge speedup check update large replicas switch set unison use file creation time pseudo inode number scan windows replicas update instead read full content every file may unison miss propagate update create time modification time length file unchanged update easy achieve do however unison never overwrite update change replica since always safe check update propagate change thus reasonable use switch time occasionally run unison fastcheck set false worry unison may overlook update warn change yet thoroughly field tested set fastcheck preference pay careful attention unison new functionality centralize backups merge version incorporate two piece major new functionality implement sylvain roy summer internship penn centralize backup facility keep full backup select file replica merge feature allow unison invoke external file merging tool resolve conflict change individual file centralize backups unison maintain full backups last synchronized versions file replica function backups usual sense common version invoke external merge program back file store directory unison backup host name directory change set environment variable unisonbackupdir predicate backup control file actually back give preference backup path cause back file file add backup directory whenever unison update archive mean unison reconstruct archive scratch e g upgrade archive file manually delete file back otherwise file back first time unison propagate update preference backupversions control many previous versions file keep default i e last synchronize version plus one backup backward compatibility backups preference also still support backup prefer ok manually delete file backup directory throw away directory unison use file anything important check fingerprint match one expect merge user interfaces offer new merge command invoke press change file select actual merge perform external program preferences merge merge control program invoke backup exist file see backup preference merge preference use purpose otherwise merge use case value preference string represent command pass invoke merge program within string special substrings current current new old may appear point unison substitute follow invoke command current replace name local copy file current replace name temporary file content remote copy file transfer unison prior perform merge new replace name temporary file unison expect write merge program finish give desire new content file old replace name back copy original version file i e state end last successful run unison one exist apply merge merge example unix systems set merge preference merge diff current old current new tell unison use external diff program merge large number external merge program available example emacs users may find follow convenient merge emacs q eval ediff merge files current current nil new merge emacs q eval current current old nil new command display two line avoid run edge page preference file write single line external program exit without leave file path new unison consider merge fail merge program write file call new exit non zero status code unison consider merge succeed generate conflict case attempt invoke external editor user resolve conflict value editor preference control editor invoke unison default emacs please send us suggestions useful value merge merge preferences would like give several examples manual smaller change one preference file include another unison longer add suffix prf include file default file precisely give name exist unison directory use otherwise unison add prf change mean include preference file name blah include instead blah prf unison offer choose preference file dialog linux systems offer statically link dynamically link executable static one larger probably run systems since depend versions dynamically link library modules available fix force prefer preferences get propagation direction exactly backwards fix bug startup code would unison crash default profile exist fix bug run profile first create unison would confusingly display root reverse order user interface developers add module dependency diagram source distribution src dependencies ps help new prospective developers navigate code change since incompatible change archive format change incompatible change startup sequence completely rewrite greatly simplify main user visible change defaultpath preference remove effect approximate use multiple profile include directives incorporate common settings use defaultpath exist profile change path another change startup behavior affect users longer possible specify root profile command line achieve similar effect though break profile two default prf root blah root foo include common common prf unison common root root want specify root explicitly prefer force options extend allow users specify file recent modtimes propagate write either prefer newer force newer symmetry unison also accept prefer older force older force older newer options use time also set graphical user interface provide access facilities one off basis via action menu name root aliased allow replicas relocate without change name archive file unison store information run feature experts see archive file section manual information graphical user interface new command provide synchronization menu switch new profile without restart unison scratch gui also support one key shortcuts commonly use profile profile contain preference form key n n single digit press key unison immediately switch profile begin synchronization scratch action may select set change currently display discard profile may include preference label give descriptive string describe options select profile string list along profile name profile selection dialog display top right corner main unison window minor fix bug would sometimes wouldiff display order file backwards relative main user interface thank pascal brisset fix unix systems graphical version unison check display variable set automatically fall back textual user interface synchronization paths path preferences match ignore preferences path specify path preference ignore skip numerous bugfixes small improvements change since synchronization modification time disable directories preference file may include line form include name prf read point synchronization permission windows unix work properly bind cygwin binmode add environment cygwin port openssh work properly non cygwin context servercmd addversionno preferences use together addversionno append appropriate nnn server command find use value servercmd preference one else unison pref val pref val allow boolean value former use set preference false lot small bug fix change since log preference set true default since log file seem useful users several miscellaneous bugfixes involve symlinks change since incompatible change archive format change several significant bug introduce fix change since incompatible change archive format change make sure synchronize replicas upgrade avoid spurious conflict first sync upgrade slow new functionality unison synchronize file modtimes user ids group ids new feature control set new preferences currently false default time preference set true file modification time propaged representations time may granularity replicas unison may always able make modtimes precisely equal get close operate systems involve allow owner preference set true file ownership information synchronize group preference set true group information synchronize numericids preference set true owner group information synchronize numerically default owner group number convert name replica name synchronize special user id special group never map via user group name even preference set add integer valued preference perm use control propagation permission bits value preference mask indicate permission bits synchronize set default bits set uid set gid bits synchronise synchronize theses latter bits security hazard want synchronize bits set value preference add log preference default false make unison keep complete record change make replicas default record write file call unison log user home directory value home environment variable want someplace else set logfile preference full pathname want unison use add ignorenot preference maintain set pattern paths definitely ignore whether match ignore pattern path ignore iff match ignore pattern match ignorenot pattern user interface improvements root display user interface order give command line preferences file batch preference set graphical user interface longer wait user confirmation display warn message simply pop advisory window dismiss button bottom keep go add new preference control many status message print update detection statusdepth control maximum depth paths local machine longer paths display non directory paths value integer default remove trace silent preferences seem useful many preferences control output various ways text ui display default command one use user type instead available command type print full list possibilities function find canonical hostname local host use example calculate name archive file use remember file synchronize normally use gethostname operate system call however environment variable unisonlocalhostname set value use instead make easier use unison situations machine name change frequently e g laptop get move around lot file owner group display detail window bottom screen unison configure synchronize hackers update jacques garrigue new version lablgtk mean throw away local patch version compile gtk version unison source need update copy lablgtk developers release available http warn instal lablgtk windows currently bite challenge todo txt file source distribution clean reorganize list pending task much easier make sense people may want contribute program energies also separate file bugs txt open bug tk user interface remove maintain longer compile debug preference print quite bite additional information useful identify source problems version number remote server check right away connection setup handshake rather later somebody send bug report server crash turn come use inconsistent versions better check earlier way crash either client server unison run correctly bit architectures e g alpha linux distribute binaries architectures least someone would like make available glad provide link bug fix pattern match e g ignore case insensitive unison case insensitive mode i e one replicas windows machine people trouble mysterious failures propagation update file would falsely report change synchronization fix numerous smaller fix change since add number sort modes user interface default conflict change display top rest entries sort alphabetical order behavior change follow ways set sortnewfirst preference true cause newly create file display change file set sortbysize cause file display increase order size give preference sortfirst path descriptor format ignore follow pattern cause paths match pattern display first similarly give preference sortlast cause paths match pattern display last sort preferences describe detail user manual sortnewfirst sortbysize flag also access sort menu grpahical user interface add two new preferences use change unison fundamental behavior make like mirror tool instead synchronizer give preference prefer argument add prefer command line prefer profile mean conflict content propagate replica question ask non conflicting change treat usual give preference force argument make unison resolve differences favor give root even replica change options use care information available manual small change change default answer yes two button dialogs graphical interface seem intuitive rsync preference remove use activate rsync compression file transfer rsync compression enable default text user interface arrows indicate direction change propagate print differently user overridded unison default recommendation instead match behavior graphical interface display arrows different color carriage return control m ignore end line profile windows compatibility preferences fully document user manual change since incompatible change archive format change make sure synchronize replicas upgrade avoid spurious conflict first sync upgrade slow new improved functionality new preference sortbysize control order change display user set true smallest change file display first default set false new preference sortnewfirst cause newly create file list update user interface allow ssh protocol specify port incompatible change unison protocol deprecate add file socket may modify profile unison directory replica specify without explicit protocol assume refer file previously saul foo mean use ssh connect saul access foo directory mean access saul via remote file mechanism samba old effect achieve write ssh saul foo change startup sequence case root give profile give command line new behavior use default profile create exist temporarily override root manual claim case would work read profile afaik never true user interfaces file conflict always list first new preference sshversion use control version ssh use connect server legal value default empty make unison use whatever version ssh instal default ssh command situation permissions file update side handle correctly use report spurious conflict improvements windows version fact filenames treat case insensitively windows handle correctly exact behavior describe cross platform section manual possible synchronize windows share e g host drive path workarounds bug sync root directories windows difficult thing fix ocaml bug unix opendir fail c versions windows improvements gtk user interface tk interface longer maintain ui display action differently blue explicitly change user unison default recommendation colorful appearance initial profile selection window work better transfer fail message effect display along synchronization complete end transfer phase case may scroll top add global progress meter display percentage total bytes transfer far improvements text user interface file detail display automatically conflict detect warn generate e g temporary file leave previous run unison unison longer wait response run batch mode ui display short list possible input time wait user interaction ui quit immediately rather loop back start interaction user press q ask whether propagate change press g text user interface proceed immediately propagate update without ask question documentation installation change manual include faq plus section common problems trick contribute users download page download directory explicitly say current stable beta test version number ocaml source up to the minute developers version guarantee stable even compile give time available download page add subsection manual describe cross platform issue case conflict illegal filenames many small bug fix random improvements change since several bug fix important bug rsync module would occasionally change propagation fail arename error change since multi threaded transport system disable default stable enough yet various bug fix new experimental feature final component path argument may wildcard specifier unison see path expand path client correspond list paths list content directory note use wildcard paths command line probably need use quote backslash prevent interpret root local content first one use expand wildcard paths nb first one canonization step i e one list first user interface one list first command line preferences file change since transport subsystem include implementation sylvain gommier norman ramsey tridgell mackerras rsync protocol protocol achieve much faster transfer small part large file change send diffs feature mainly helpful transfer slow link fast local area network actually degrade performance leave default start unison rsync option put rsync true preferences file turn progress bar diplayed remote file transfer show percentage file transfer far version number scheme change new release number like second component incremented every significant public release third component patch level miscellaneous improvements gtk based user interface manual available pdf format experiment use multi threaded transport subsystem transfer several file time make much effective use available network bandwidth feature completely stable yet default disable release version unison want play multi threaded version need recompile unison source describe documentation set thread flag makefile ocaml true make sure ocaml compiler instal with pthreads configuration option verify check whether file threads threads cma ocaml standard library directory contain string lpthread near end change since reduce memory footprint especially important first run unison gather information file repositories fix bug would socket server nt fail client exit add shift modifier ignore menu shortcut key gtk interface avoid hit accidentally change since tunnel ssh support windows version see installation section manual detail instructions transport subsystem include implementation rsync protocol build sylvain gommier norman ramsey protocol achieve much faster transfer small part large file change send diffs rsync feature default current version use rsync switch turn nb still lot tune may notice much speedup yet experiment multi threaded transport subsystem write jerome vouillon downloadable binaries still single threaded want try multi threaded version need recompile source say make threads true native thread support compiler require use option thread n select maximal number concurrent thread default multi threaded single threaded clients servers interoperate new gtk based user interface available thank jacques garrigue tk user interface still work shift development effort gtk interface ocaml require compile unison source modules uitk myfileselect change use labltk instead camltk compile tk interface windows must ocaml tk instal tk put c tcl rather suggest c program files tcl sure install headers libraries instal default add new addversionno switch cause unison use unison instead unison remote server command allow multiple versions unison coexist conveniently server whichever version run client version select server change since incompatible change archive format change make sure synchronize replicas upgrade avoid spurious conflict first sync upgrade slow version fix several annoy bug include case propagation file permissions work umask ignore create directories directories create writable read only directory content propagate handle warn generate server synchronize path whose parent directory side flag erroneous fix bug relate symnbolic link nonexistant root change deletion new content propagate onto follow ed symlink file point link change use change link fit assertion follow mean link completely invisible one root exist propagate root top use fail becuase unison could calculate work directory write change fix human readable timestamp add unison archive file semantics path name regular expressions correspond better minor improvements text ui e g command go back previous items organization export directory change easier find download things change since incompatible change archive format change make sure synchronize replicas upgrade avoid spurious conflict first sync upgrade slow version test extensively windows major internal change design make unison safer run time replicas change user internal performance improvements change since incompatible change archive format change make sure synchronize replicas upgrade avoid spurious conflict first sync upgrade slow number internal function change reduce amount memory allocation especially first synchronization help power users big replicas reimplementation low level remote procedure call stuff preparation add rsync like smart file transfer later release miscellaneous bug fix change since incompatible change archive format change make sure synchronize replicas upgrade avoid spurious conflict first sync upgrade slow fix small bug interpretation ignore pattern fix problems prevent windows version work correctly click started fix treatment file permissions windows cause spurious report different permissions synchronize windows unix systems fix one non tail recursive list process function cause stack overflow synchronize large replicas change since text user interface provide command ignore file find fix non tail recursive list process function power users report success large replicas incompatible change file end tmp longer ignore automatically want ignore file put appropriate ignore pattern profile incompatible change syntax ignore follow pattern change instead put line form ignore profile unison default prf put ignore regexp moreover two style pattern also recognize ignore name match path one component match ignore path match exactly path standard globbing conventions use match single character except match sequence character include xyz match character set x z bb ccc match one bb ccc see user manual examples change since users report stack overflow synchronize huge directories find fix non tail recursive list process function hope solve problem please give try let us know major additions documentation change since major internal tidy many small bugfixes major additions user manual unison start arguments prompt automatically name profile file contain root synchronize make possible start graphical ui desktop icon fix small bug text ui nt raise signal exception change since precompiled windows binary last release compile old ocaml compiler cause propagation permissions work perhaps lead strange behaviors hear report correct use precompiled binaries windows please upgrade add debug command line flag control debug various modules say debug xxx enable debug trace module xxx debug turn absolutely everything fix small bug text ui nt raise signal exception change since incompatible change name format preference file unison directory change particular file prefs rename default prf content file ignore merge default prf line form regexp ignore become line form ignore regexp default prf unison handle permission bits symbolic link see manual detail different preference file unison directory start unison like unison profilename i e one anonymous command line argument file load instead default prf improvements terminal handle text user interface add switch killserver terminate remote server process unison client shut even use sockets communication default remote server create use ssh rsh terminate automatically socket server leave run start socket server mode unison print server start stderr ready accept connections may useful script want tell socket mode server finish initalization make nightly mirror current internal development tree case anyone want up to the minute version hack around add file contrib suggestions help us make unison better unsubscribe group send email egroups com use yahoo group subject http